name: CI & Deploy

on:
  push:
    branches:
      - main

concurrency:
  group: ci-deploy-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Run tests
    runs-on: ubuntu-latest
    services:
      redis:
        image: redis:6-alpine
        ports:
          - 6379:6379

    env:
      REDIS_URL: redis://localhost:6379
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi

      - name: Run linters
        run: |
          flake8 src scripts tests || true

      - name: Run pytest
        run: |
          pytest --maxfail=1 --disable-warnings -q

  build-and-push:
    name: Build, push image and deploy to Render
    runs-on: ubuntu-latest
    needs: test
    env:
      IMAGE: ghcr.io/${{ github.repository_owner }}/${{ github.repository }}:${{ github.sha }}
      IMAGE_LATEST: ghcr.io/${{ github.repository_owner }}/${{ github.repository }}:latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry (GHCR)
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image to GHCR
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ${{ env.IMAGE }}
            ${{ env.IMAGE_LATEST }}
          file: ./Dockerfile

      - name: Trigger Render deploy with retries
        if: ${{ secrets.RENDER_API_KEY != '' && secrets.RENDER_SERVICE_ID != '' }}
        env:
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
          RENDER_SERVICE_ID: ${{ secrets.RENDER_SERVICE_ID }}
        run: |
          set -euo pipefail

          echo "Triggering Render deploy for service $RENDER_SERVICE_ID with retries"
          MAX_ATTEMPTS=3
          SLEEP_BASE=5

          for attempt in $(seq 1 $MAX_ATTEMPTS); do
            echo "‚ñ∂ Deploy attempt #${attempt}"
            if curl --fail -s -X POST \
                 -H "Content-Type: application/json" \
                 -H "Authorization: Bearer $RENDER_API_KEY" \
                 -d "{\"serviceId\":\"$RENDER_SERVICE_ID\"}" \
                 https://api.render.com/deploys | jq -r .message; then
              echo "‚úÖ Deploy succeeded on attempt ${attempt}"
              break
            else
              echo "‚ùó Deploy failed on attempt ${attempt}"
              if [ "$attempt" -lt "$MAX_ATTEMPTS" ]; then
                sleep $(( SLEEP_BASE ** attempt ))
                echo "‚è≥ Retrying..."
              else
                echo "üö® All ${MAX_ATTEMPTS} deploy attempts failed."
                exit 1
              fi
            fi
          done

# Notes:
# - This workflow pushes images to GHCR (ghcr.io/<owner>/<repo>). It uses the automatic
#   `GITHUB_TOKEN` and `${{ github.actor }}` for authentication so no registry secrets are required.
# - Required repository secrets for deploy: RENDER_API_KEY (optional), RENDER_SERVICE_ID (optional)
